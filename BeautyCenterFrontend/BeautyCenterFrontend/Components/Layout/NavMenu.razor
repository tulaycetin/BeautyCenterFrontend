@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider

<div class="top-row navbar navbar-dark ps-3">
    @if (IsExpanded)
    {
        <div class="container-fluid">
            <a class="navbar-brand" href="">
                <i class="fas @(userRole == "SuperAdmin" ? "fa-crown" : "fa-spa") me-2"></i>
                <span class="brand-text">@brandTitle</span>
            </a>
        </div>
    }
</div>

<div class="nav-scrollable @(IsExpanded ? "expanded" : "collapsed")">
    <nav class="nav flex-column">
        <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
            <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="@dashboardLink" Match="NavLinkMatch.All">
                <i class="fas fa-tachometer-alt @(IsExpanded ? "me-2" : "")"></i>
                @if (IsExpanded)
                {
                    <span class="nav-text">Dashboard</span>
                }
            </NavLink>
        </div>

        @if (userRole == "SuperAdmin")
        {
            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="tenants">
                    <i class="fas fa-building @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Güzellik Merkezleri</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="admin-management">
                    <i class="fas fa-user-shield @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Admin Yönetimi</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="users">
                    <i class="fas fa-users-cog @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Kullanıcı Yönetimi</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="system-settings">
                    <i class="fas fa-cogs @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Sistem Ayarları</span>
                    }
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="customers">
                    <i class="fas fa-users @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Müşteriler</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="appointments">
                    <i class="fas fa-calendar-alt @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Randevular</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="payments">
                    <i class="fas fa-credit-card @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Ödemeler</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="services">
                    <i class="fas fa-spa @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Hizmetler</span>
                    }
                </NavLink>
            </div>

            <div class="nav-item @(IsExpanded ? "px-3" : "px-2")">
                <NavLink class="@($"nav-link {(IsExpanded ? "" : "icon-only")}")" href="reports">
                    <i class="fas fa-chart-bar @(IsExpanded ? "me-2" : "")"></i>
                    @if (IsExpanded)
                    {
                        <span class="nav-text">Raporlar</span>
                    }
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    [Parameter] public bool IsExpanded { get; set; }

    private string userRole = "";
    private string brandTitle = "";
    private string dashboardLink = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadUserRole();
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine($"NavMenu: IsExpanded = {IsExpanded}");
    }

    private async Task LoadUserRole()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            userRole = authState.User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value ?? "";

            if (userRole == "SuperAdmin")
            {
                brandTitle = "Super Admin Panel";
                dashboardLink = "/superadmin";
            }
            else
            {
                var firstName = authState.User.FindFirst(System.Security.Claims.ClaimTypes.GivenName)?.Value ?? "";
                brandTitle = $"{firstName} Güzellik Merkezi";
                dashboardLink = "/";
            }

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"NavMenu Auth Error: {ex.Message}");
            userRole = "";
            brandTitle = "Güzellik Merkezi";
            dashboardLink = "/";
        }
    }
}

